{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","renderData","setRenderData","url","setUrl","query","setQuery","drinksArr","useEffect","a","console","log","axios","result","data","drinks","map","item","push","fetchData","handleSubmit","event","preventDefault","onSubmit","value","target","type","onClick","id","href","strDrink","src","strDrinkThumb","width","height","alt","strImageSource","strIngredient1","strMeasure1","strIngredient2","strMeasure2","strIngredient3","strMeasure3","strIngredient4","strMeasure4","strIngredient5","strMeasure5","strIngredient6","strMeasure6","strIngredient7","strMeasure7","strIngredient8","strMeasure8","strIngredient9","strMeasure9","strIngredient10","strMeasure10","strInstructions","idDrink","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dd82197.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\n\n\n\nfunction App () {\n  // Filter by Category\n  // https://www.thecocktaildb.com/api/json/v1/1/filter.php?c=Ordinary_Drink\n  // const { Container } = ReactBootstrap;  \n    const [renderData, setRenderData] = useState([]);\n    const [url, setUrl] = useState ('https://www.thecocktaildb.com/api/json/v1/1/search.php?s=margarita');\n    const [query, setQuery] =useState(\"\");\n    const drinksArr=[];\n    useEffect (() => {\n      const fetchData = async () => {\n      //  setIsLoading(true);\n      console.log(url);\n        const result = await axios(url);\n        let data = result.data;\n        \n        data.drinks.map((item) => {\n          console.log(item);\n          drinksArr.push(item)\n        });\n        console.log(drinksArr);\n        setRenderData(drinksArr);\n        console.log(drinksArr[0]['strIngredient1']);\n    };\n\n    fetchData()\n    },[url]);\n    \n    const handleSubmit = (event) => {\n      setUrl(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${query}`);\n      event.preventDefault();\n    };\n\n    return (\n      <div>\n      <form onSubmit={handleSubmit}>\n      <input value=\"text\" value={query} onChange={event => setQuery(event.target.value)}></input>\n      <button type=\"button\" onClick={handleSubmit} >Search</button>\n      </form> \n      {console.log('query')}\n      {console.log(query)}\n      {console.log('renderData')}\n      {console.log(renderData)}\n       <ul id=\"drinks\"> {renderData.map(item =>  (\n        <li id=\"drink\" key={item.idDrink}>\n        <a href={item.url}>{item.strDrink}</a><br></br>\n        <img\n          src={item.strDrinkThumb}\n          width=\"200\"\n          height=\"200\"\n          alt={`Image of a ${item.strDrink} Image source is ${item.strImageSource}`}>\n         </img><br></br>\n        <ol>\n        {item.strIngredient1 ? <li href={item.url}>{item.strMeasure1} : {item.strIngredient1}</li> : ''}\n        {item.strIngredient2 ? <li href={item.url}>{item.strMeasure2} : {item.strIngredient2}</li> : ''}\n        {item.strIngredient3 ? <li href={item.url}>{item.strMeasure3} : {item.strIngredient3}</li> : ''}\n        {item.strIngredient4 ? <li href={item.url}>{item.strMeasure4} : {item.strIngredient4}</li> : ''}\n        {item.strIngredient5 ? <li href={item.url}>{item.strMeasure5} : {item.strIngredient5}</li> : ''}\n        {item.strIngredient6 ? <li href={item.url}>{item.strMeasure6} : {item.strIngredient6}</li> : ''}\n        {item.strIngredient7 ? <li href={item.url}>{item.strMeasure7} : {item.strIngredient7}</li> : ''}\n        {item.strIngredient8 ? <li href={item.url}>{item.strMeasure8} : {item.strIngredient8}</li> : ''}\n        {item.strIngredient9 ? <li href={item.url}>{item.strMeasure9} : {item.strIngredient9}</li> : ''}\n        {item.strIngredient10 ? <li href={item.url}>{item.strMeasure10} : {item.strIngredient10}</li> : ''}\n        </ol>\n        <a href={item.url}>{item.strInstructions}</a>\n        </li>\n        \n       ))}\n       </ul>\n    </div>\n    ); \n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}